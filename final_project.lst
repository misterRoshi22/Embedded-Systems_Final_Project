;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/25/2024 12:57:02 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28C5      	GOTO       197
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B9      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A6      	MOVWF      38
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A5      	MOVWF      37
0x000F	0x0874      	MOVF       R4, 0
0x0010	0x00A4      	MOVWF      36
0x0011	0x0875      	MOVF       R5, 0
0x0012	0x00A3      	MOVWF      35
0x0013	0x0878      	MOVF       R8, 0
0x0014	0x00A2      	MOVWF      34
0x0015	0x0879      	MOVF       R9, 0
0x0016	0x00A1      	MOVWF      33
0x0017	0x087C      	MOVF       R12, 0
0x0018	0x00A0      	MOVWF      32
;final_project.c,8 :: 		interrupt() { // TMR0 overflow interrupt occurs every 32ms
;final_project.c,9 :: 		tick++; // Increment tick every 32ms
0x0019	0x0AB1      	INCF       _tick, 1
;final_project.c,10 :: 		if (tick == 16) { // This condition is true approximately every 500ms
0x001A	0x0831      	MOVF       _tick, 0
0x001B	0x3A10      	XORLW      16
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x283A      	GOTO       L_interrupt0
;final_project.c,11 :: 		tick = 0;
0x001E	0x01B1      	CLRF       _tick
;final_project.c,12 :: 		myreading = ATD_read();
0x001F	0x208B      	CALL       _ATD_read
0x0020	0x0870      	MOVF       R0, 0
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x00B6      	MOVWF      _myreading
0x0023	0x0871      	MOVF       R0+1, 0
0x0024	0x00B7      	MOVWF      _myreading+1
;final_project.c,13 :: 		PORTB = myreading;         // Display on PORTB the lower 8 bits of myreading
0x0025	0x0870      	MOVF       R0, 0
0x0026	0x0086      	MOVWF      PORTB
;final_project.c,14 :: 		PORTC = myreading >> 8;    // Display on PORTC the higher 8 bits by shifting 8 positions
0x0027	0x0871      	MOVF       R0+1, 0
0x0028	0x00F2      	MOVWF      R2
0x0029	0x01F3      	CLRF       R2+1
0x002A	0x0872      	MOVF       R2, 0
0x002B	0x0087      	MOVWF      PORTC
;final_project.c,15 :: 		myVoltage = (unsigned int)(myreading * 50) / 1023;
0x002C	0x3032      	MOVLW      50
0x002D	0x00F4      	MOVWF      R4
0x002E	0x3000      	MOVLW      0
0x002F	0x00F5      	MOVWF      R4+1
0x0030	0x209A      	CALL       _Mul_16X16_U
0x0031	0x30FF      	MOVLW      255
0x0032	0x00F4      	MOVWF      R4
0x0033	0x3003      	MOVLW      3
0x0034	0x00F5      	MOVWF      R4+1
0x0035	0x2064      	CALL       _Div_16X16_U
0x0036	0x0870      	MOVF       R0, 0
0x0037	0x00B2      	MOVWF      _myVoltage
0x0038	0x0871      	MOVF       R0+1, 0
0x0039	0x00B3      	MOVWF      _myVoltage+1
;final_project.c,16 :: 		}
L_interrupt0:
;final_project.c,17 :: 		INTCON = INTCON & 0xFB; // Clear the interrupt flag
0x003A	0x30FB      	MOVLW      251
0x003B	0x058B      	ANDWF      INTCON, 1
;final_project.c,18 :: 		}
L_end_interrupt:
L__interrupt8:
0x003C	0x0826      	MOVF       38, 0
0x003D	0x00F0      	MOVWF      R0
0x003E	0x0825      	MOVF       37, 0
0x003F	0x00F1      	MOVWF      R1
0x0040	0x0824      	MOVF       36, 0
0x0041	0x00F4      	MOVWF      R4
0x0042	0x0823      	MOVF       35, 0
0x0043	0x00F5      	MOVWF      R5
0x0044	0x0822      	MOVF       34, 0
0x0045	0x00F8      	MOVWF      R8
0x0046	0x0821      	MOVF       33, 0
0x0047	0x00F9      	MOVWF      R9
0x0048	0x0820      	MOVF       32, 0
0x0049	0x00FC      	MOVWF      R12
0x004A	0x0839      	MOVF       ___savePCLATH, 0
0x004B	0x008A      	MOVWF      PCLATH
0x004C	0x0E38      	SWAPF      ___saveSTATUS, 0
0x004D	0x0083      	MOVWF      STATUS
0x004E	0x0EFF      	SWAPF      R15, 1
0x004F	0x0E7F      	SWAPF      R15, 0
0x0050	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x1303      	BCF        STATUS, 6
0x0053	0x0835      	MOVF       ___DoICPAddr+1, 0
0x0054	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0055	0x0834      	MOVF       ___DoICPAddr, 0
0x0056	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0057	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0058	0x2051      	CALL       _____DoICP
0x0059	0x118A      	BCF        PCLATH, 3
0x005A	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x005B	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x005C	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x005D	0x0AB4      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x005E	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x005F	0x0AB5      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0060	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0061	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0062	0x2858      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0063	0x0008      	RETURN
; end of ___CC2DW
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0064	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0065	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0066	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0067	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0068	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0069	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x006A	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x006B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x006C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x006D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x006E	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x006F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0070	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0071	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0072	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0073	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0074	0x287C      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0075	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0076	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0077	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0078	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0079	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x007A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x007B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x007C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x007D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x007E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x007F	0x286A      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0080	0x0008      	RETURN
; end of _Div_16X16_U
_ATD_init:
;final_project.c,45 :: 		void ATD_init(void) {
;final_project.c,46 :: 		ADCON0 = 0x41; // ATD ON, Don't GO, Channel 0, Fosc/16
0x0081	0x3041      	MOVLW      65
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x009F      	MOVWF      ADCON0
;final_project.c,47 :: 		ADCON1 = 0xCE; // All channels are digital except RA0/AN0 is analog, 500 kHz, right justified
0x0085	0x30CE      	MOVLW      206
0x0086	0x1683      	BSF        STATUS, 5
0x0087	0x009F      	MOVWF      ADCON1
;final_project.c,48 :: 		TRISA = 0x01;  // Set RA0/AN0 as input
0x0088	0x3001      	MOVLW      1
0x0089	0x0085      	MOVWF      TRISA
;final_project.c,49 :: 		}
L_end_ATD_init:
0x008A	0x0008      	RETURN
; end of _ATD_init
_ATD_read:
;final_project.c,51 :: 		unsigned int ATD_read(void) {
;final_project.c,52 :: 		ADCON0 = ADCON0 | 0x04; // Start conversion (GO bit set)
0x008B	0x1283      	BCF        STATUS, 5
0x008C	0x1303      	BCF        STATUS, 6
0x008D	0x151F      	BSF        ADCON0, 2
;final_project.c,53 :: 		while (ADCON0 & 0x04);  // Wait for conversion to complete
L_ATD_read5:
0x008E	0x1D1F      	BTFSS      ADCON0, 2
0x008F	0x2891      	GOTO       L_ATD_read6
0x0090	0x288E      	GOTO       L_ATD_read5
L_ATD_read6:
;final_project.c,54 :: 		return ((ADRESH << 8) | ADRESL); // Combine high and low bits of the result
0x0091	0x081E      	MOVF       ADRESH, 0
0x0092	0x00F1      	MOVWF      R0+1
0x0093	0x01F0      	CLRF       R0
0x0094	0x1683      	BSF        STATUS, 5
0x0095	0x081E      	MOVF       ADRESL, 0
0x0096	0x04F0      	IORWF      R0, 1
0x0097	0x3000      	MOVLW      0
0x0098	0x04F1      	IORWF      R0+1, 1
;final_project.c,55 :: 		}
L_end_ATD_read:
0x0099	0x0008      	RETURN
; end of _ATD_read
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x009A	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x009B	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x009C	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x009D	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x009E	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x009F	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x00A0	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x00A1	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x00A2	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x00A3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x00A4	0x28AE      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x00A5	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x00A6	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x00A7	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x00A8	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x00A9	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x00AA	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x00AB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x00AC	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x00AD	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x00AE	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x00AF	0x28B6      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x00B0	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x00B1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x00B2	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x00B3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x00B4	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x00B5	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x00B6	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x00B7	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x00B8	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x00B9	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x00BA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x00BB	0x28A1      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x00BC	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x00BD	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x00BE	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x00BF	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x00C0	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x00C1	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x00C2	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x00C3	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x00C4	0x0008      	RETURN
; end of _Mul_16X16_U
_main:
0x00C5	0x303F      	MOVLW      63
0x00C6	0x1283      	BCF        STATUS, 5
0x00C7	0x1303      	BCF        STATUS, 6
0x00C8	0x00A7      	MOVWF      _mysevenseg
0x00C9	0x3006      	MOVLW      6
0x00CA	0x00A8      	MOVWF      40
0x00CB	0x305B      	MOVLW      91
0x00CC	0x00A9      	MOVWF      41
0x00CD	0x304F      	MOVLW      79
0x00CE	0x00AA      	MOVWF      42
0x00CF	0x3066      	MOVLW      102
0x00D0	0x00AB      	MOVWF      43
0x00D1	0x306D      	MOVLW      109
0x00D2	0x00AC      	MOVWF      44
0x00D3	0x307D      	MOVLW      125
0x00D4	0x00AD      	MOVWF      45
0x00D5	0x3007      	MOVLW      7
0x00D6	0x00AE      	MOVWF      46
0x00D7	0x307F      	MOVLW      127
0x00D8	0x00AF      	MOVWF      47
0x00D9	0x306F      	MOVLW      111
0x00DA	0x00B0      	MOVWF      48
;final_project.c,20 :: 		void main() {
;final_project.c,22 :: 		TRISB = 0x00;
0x00DB	0x1683      	BSF        STATUS, 5
0x00DC	0x0186      	CLRF       TRISB
;final_project.c,23 :: 		TRISC = 0x00;
0x00DD	0x0187      	CLRF       TRISC
;final_project.c,24 :: 		TRISD = 0x00;
0x00DE	0x0188      	CLRF       TRISD
;final_project.c,27 :: 		ATD_init();
0x00DF	0x2081      	CALL       _ATD_init
;final_project.c,30 :: 		OPTION_REG = 0x07; // Oscillator clock / 4, prescale of 256
0x00E0	0x3007      	MOVLW      7
0x00E1	0x0081      	MOVWF      OPTION_REG
;final_project.c,31 :: 		INTCON = 0xA0;     // Enable global interrupt and TMR0 overflow interrupt
0x00E2	0x30A0      	MOVLW      160
0x00E3	0x008B      	MOVWF      INTCON
;final_project.c,32 :: 		TMR0 = 0;
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x0181      	CLRF       TMR0
;final_project.c,35 :: 		while (1) {
L_main1:
;final_project.c,36 :: 		delay_ms(5);
0x00E6	0x300D      	MOVLW      13
0x00E7	0x00FC      	MOVWF      R12
0x00E8	0x30FB      	MOVLW      251
0x00E9	0x00FD      	MOVWF      R13
L_main3:
0x00EA	0x0BFD      	DECFSZ     R13, 1
0x00EB	0x28EA      	GOTO       L_main3
0x00EC	0x0BFC      	DECFSZ     R12, 1
0x00ED	0x28EA      	GOTO       L_main3
0x00EE	0x0000      	NOP
0x00EF	0x0000      	NOP
;final_project.c,37 :: 		PORTA = 0x04;
0x00F0	0x3004      	MOVLW      4
0x00F1	0x0085      	MOVWF      PORTA
;final_project.c,38 :: 		PORTD = mysevenseg[myVoltage % 10]; // Display first digit
0x00F2	0x300A      	MOVLW      10
0x00F3	0x00F4      	MOVWF      R4
0x00F4	0x3000      	MOVLW      0
0x00F5	0x00F5      	MOVWF      R4+1
0x00F6	0x0832      	MOVF       _myVoltage, 0
0x00F7	0x00F0      	MOVWF      R0
0x00F8	0x0833      	MOVF       _myVoltage+1, 0
0x00F9	0x00F1      	MOVWF      R0+1
0x00FA	0x2064      	CALL       _Div_16X16_U
0x00FB	0x0878      	MOVF       R8, 0
0x00FC	0x00F0      	MOVWF      R0
0x00FD	0x0879      	MOVF       R8+1, 0
0x00FE	0x00F1      	MOVWF      R0+1
0x00FF	0x0870      	MOVF       R0, 0
0x0100	0x3E27      	ADDLW      _mysevenseg
0x0101	0x0084      	MOVWF      FSR
0x0102	0x0800      	MOVF       INDF, 0
0x0103	0x0088      	MOVWF      PORTD
;final_project.c,39 :: 		delay_ms(5);
0x0104	0x300D      	MOVLW      13
0x0105	0x00FC      	MOVWF      R12
0x0106	0x30FB      	MOVLW      251
0x0107	0x00FD      	MOVWF      R13
L_main4:
0x0108	0x0BFD      	DECFSZ     R13, 1
0x0109	0x2908      	GOTO       L_main4
0x010A	0x0BFC      	DECFSZ     R12, 1
0x010B	0x2908      	GOTO       L_main4
0x010C	0x0000      	NOP
0x010D	0x0000      	NOP
;final_project.c,40 :: 		PORTA = 0x08;
0x010E	0x3008      	MOVLW      8
0x010F	0x0085      	MOVWF      PORTA
;final_project.c,41 :: 		PORTD = (mysevenseg[myVoltage / 10]) | 0x80; // Display second digit
0x0110	0x300A      	MOVLW      10
0x0111	0x00F4      	MOVWF      R4
0x0112	0x3000      	MOVLW      0
0x0113	0x00F5      	MOVWF      R4+1
0x0114	0x0832      	MOVF       _myVoltage, 0
0x0115	0x00F0      	MOVWF      R0
0x0116	0x0833      	MOVF       _myVoltage+1, 0
0x0117	0x00F1      	MOVWF      R0+1
0x0118	0x2064      	CALL       _Div_16X16_U
0x0119	0x0870      	MOVF       R0, 0
0x011A	0x3E27      	ADDLW      _mysevenseg
0x011B	0x0084      	MOVWF      FSR
0x011C	0x3080      	MOVLW      128
0x011D	0x0400      	IORWF      INDF, 0
0x011E	0x0088      	MOVWF      PORTD
;final_project.c,42 :: 		}
0x011F	0x28E6      	GOTO       L_main1
;final_project.c,43 :: 		}
L_end_main:
0x0120	0x2920      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [77]    _interrupt
0x0051       [7]    _____DoICP
0x0058      [12]    ___CC2DW
0x0064      [29]    _Div_16X16_U
0x0081      [10]    _ATD_init
0x008B      [15]    _ATD_read
0x009A      [43]    _Mul_16X16_U
0x00C5      [92]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0027      [10]    _mysevenseg
0x0031       [1]    _tick
0x0032       [2]    _myVoltage
0x0034       [2]    ___DoICPAddr
0x0036       [2]    _myreading
0x0038       [1]    ___saveSTATUS
0x0039       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
